import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$hs.kotlin.version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$hs.spring.bootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$hs.spring.dependencyManagementVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$hs.kotlin.version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$hs.kotlin.version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"

repositories {
    mavenCentral()
}

sourceSets.main.resources.srcDirs = ["src/resources"]

dependencies {
    // SpringBoot core starter
    implementation 'org.springframework.boot:spring-boot-starter'

    // SpringBoot actuator - monitor & manage production app
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // SpringBoot web - REST services, Spring MVC, Tomcat ...
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Jackson Kotlin module - serialization/deserialization of Kotlin classes
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    // Kotlin-reflect - runtime libraries for Kotlin reflection
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // Validation - bean validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JPA - Spring Data JPA with Hibernate
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security - authentication + access control framework
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // H2 database
    runtimeOnly 'com.h2database:h2'

    // SpringBoot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = "$hs.kotlin.javaVersion"
    }
}
